name: pr_to_main

on:
  pull_request:
    branches:
      - main
env:
  DBT_PROFILES_DIR: ./
  DBT_PROJECT_DIR: ./integration_tests

  DBT_GOOGLE_PROJECT: ${{ secrets.DBT_GOOGLE_PROJECT }}
  DBT_GOOGLE_BIGQUERY_DATASET: ${{ secrets.DBT_GOOGLE_BIGQUERY_DATASET }}

  DBT_GOOGLE_BIGQUERY_KEYFILE: /tmp/.service-account.json

  DBT_SNOWFLAKE_ACCOUNT: ${{ secrets.DBT_SNOWFLAKE_ACCOUNT }}
  DBT_SNOWFLAKE_USER: ${{ secrets.DBT_SNOWFLAKE_USER }}
  DBT_SNOWFLAKE_PASSWORD: ${{ secrets.DBT_SNOWFLAKE_PASSWORD }}
  DBT_SNOWFLAKE_ROLE: ${{ secrets.DBT_SNOWFLAKE_ROLE }}
  DBT_SNOWFLAKE_DATABASE: ${{ secrets.DBT_SNOWFLAKE_DATABASE }}
  DBT_SNOWFLAKE_WAREHOUSE: ${{ secrets.DBT_SNOWFLAKE_WAREHOUSE }}
  DBT_SNOWFLAKE_SCHEMA: ${{ secrets.DBT_SNOWFLAKE_SCHEMA }}

  # The hostname used to communicate with the PostgreSQL service container
  # POSTGRES_HOST: localhost
  # The default PostgreSQL port
  # POSTGRES_PORT: 5432

jobs:

  pr_to_main:
    name: pr_to_main
    runs-on: ubuntu-latest
    environment: dev

    services:
      # Label used to access the service container
      postgres:
        image: postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        ports:
          - 5432/5432
        # needed because the postgres container does not provide a healthcheck
        options:
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        # with:
        #   ref: ${{ github.event.pull_request.head.sha }} # Check out the code of the PR


      # - name: Install PostgreSQL
      #   if: ${{ env.ACT }}
      #   run: |
      #     apt-get update
      #     apt-get install --yes postgresql postgresql-client

      # - name: Install PostgreSQL client
      #   run: |
      #     apt-get update
      #     apt-get install --yes postgresql-client

      # - name: Boot local dependencies
      #   if: ${{ env.ACT }}
      #   run: |
      #     sudo service postgresql start

      # - name: Configure local dependencies
      #   if: ${{ env.ACT }}
      #   run: |
      #     sudo -u postgres psql -U postgres -d postgres -c "alter user postgres with password 'postgres';"


      # Queries database with postgres client
      - name: Query database
        run: psql -h $POSTGRES_HOST -d postgres -c 'SELECT 1;'
        env:
          POSTGRES_HOST: localhost
          POSTGRES_PASSWORD: postgres
          # POSTGRES_PORT: ${{ job.services.postgres.ports[5432] }} # get randomly assigned published port

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.8.x"

      - name: Install Python packages
        run: |
          python3 -m venv venv
          . venv/bin/activate
          pip install -U pip wheel
          pip install dbt-core dbt-postgres dbt-bigquery dbt-snowflake

      - name: Authenticate using service account
        run: 'echo "$KEYFILE" > $DBT_GOOGLE_BIGQUERY_KEYFILE'
        shell: bash
        env:
          KEYFILE: ${{ secrets.DBT_GOOGLE_BIGQUERY_KEYFILE }}

      - name: Install dbt dependencies
        run: |
          . venv/bin/activate
          dbt deps --project-dir $DBT_PROJECT_DIR

      - name: Build dbt models (Postgres)
        run:  |
          . venv/bin/activate
          dbt build -t postgres --project-dir $DBT_PROJECT_DIR

      - name: Build dbt models (BigQuery)
        run: |
          . venv/bin/activate
          dbt build -t bq --project-dir $DBT_PROJECT_DIR

      - name: Build dbt models (Snowflake)
        run:  |
          . venv/bin/activate
          dbt build -t snowflake --project-dir $DBT_PROJECT_DIR

